// <auto-generated />
using System;
using LaLiga.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaLiga.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20210302170348_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LaLiga.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExternalApiId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("LaLiga.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AwayBallPossession")
                        .HasColumnType("int");

                    b.Property<int>("AwayBlockedShots")
                        .HasColumnType("int");

                    b.Property<int>("AwayCorners")
                        .HasColumnType("int");

                    b.Property<int>("AwayFouls")
                        .HasColumnType("int");

                    b.Property<int>("AwayGoalKeeperSaves")
                        .HasColumnType("int");

                    b.Property<int>("AwayOffSides")
                        .HasColumnType("int");

                    b.Property<int>("AwayPassesAcurate")
                        .HasColumnType("int");

                    b.Property<int>("AwayRedCards")
                        .HasColumnType("int");

                    b.Property<int>("AwayShotsInsideBox")
                        .HasColumnType("int");

                    b.Property<int>("AwayShotsOffGoal")
                        .HasColumnType("int");

                    b.Property<int>("AwayShotsOnTarget")
                        .HasColumnType("int");

                    b.Property<int>("AwayShotsOutsideBox")
                        .HasColumnType("int");

                    b.Property<int?>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<int>("AwayTotalPasses")
                        .HasColumnType("int");

                    b.Property<int>("AwayTotalShots")
                        .HasColumnType("int");

                    b.Property<int>("AwayYellowCards")
                        .HasColumnType("int");

                    b.Property<int>("FullTimeAwayGoals")
                        .HasColumnType("int");

                    b.Property<int>("FullTimeHomeGoals")
                        .HasColumnType("int");

                    b.Property<int>("HalfTimeAwayGoals")
                        .HasColumnType("int");

                    b.Property<int>("HalfTimeHomeGoals")
                        .HasColumnType("int");

                    b.Property<int>("HomeBallPossession")
                        .HasColumnType("int");

                    b.Property<int>("HomeBlockedShots")
                        .HasColumnType("int");

                    b.Property<int>("HomeCorners")
                        .HasColumnType("int");

                    b.Property<int>("HomeFouls")
                        .HasColumnType("int");

                    b.Property<int>("HomeGoalKeeperSaves")
                        .HasColumnType("int");

                    b.Property<int>("HomeOffSides")
                        .HasColumnType("int");

                    b.Property<int>("HomePassesAcurate")
                        .HasColumnType("int");

                    b.Property<int>("HomeRedCards")
                        .HasColumnType("int");

                    b.Property<int>("HomeShotsInsideBox")
                        .HasColumnType("int");

                    b.Property<int>("HomeShotsOffGoal")
                        .HasColumnType("int");

                    b.Property<int>("HomeShotsOnTarget")
                        .HasColumnType("int");

                    b.Property<int>("HomeShotsOutsideBox")
                        .HasColumnType("int");

                    b.Property<int?>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<int>("HomeTotalPasses")
                        .HasColumnType("int");

                    b.Property<int>("HomeTotalShots")
                        .HasColumnType("int");

                    b.Property<int>("HomeYellowCards")
                        .HasColumnType("int");

                    b.Property<DateTime>("MatchDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RefereeId")
                        .HasColumnType("int");

                    b.Property<int?>("SeazonLeagueLeagueId")
                        .HasColumnType("int");

                    b.Property<int?>("SeazonLeagueSeazonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("RefereeId");

                    b.HasIndex("SeazonLeagueSeazonId", "SeazonLeagueLeagueId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("LaLiga.Models.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("NameAndCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeazonLeagueLeagueId")
                        .HasColumnType("int");

                    b.Property<int?>("SeazonLeagueSeazonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("SeazonLeagueSeazonId", "SeazonLeagueLeagueId");

                    b.ToTable("Referees");
                });

            modelBuilder.Entity("LaLiga.Models.Seazon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SeazonEnd")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeazonYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("SezonBeginning")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Seazons");
                });

            modelBuilder.Entity("LaLiga.Models.SeazonLeague", b =>
                {
                    b.Property<int>("SeazonId")
                        .HasColumnType("int");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("SeazonId", "LeagueId");

                    b.HasIndex("LeagueId");

                    b.HasIndex("TeamId");

                    b.ToTable("SeazonLeagues");
                });

            modelBuilder.Entity("LaLiga.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("LaLiga.Models.TeamMatch", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<bool>("Home")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("TeamId", "MatchId");

                    b.HasIndex("MatchId");

                    b.ToTable("TeamMatch");
                });

            modelBuilder.Entity("LeagueSeazon", b =>
                {
                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int>("SeazonsId")
                        .HasColumnType("int");

                    b.HasKey("LeagueId", "SeazonsId");

                    b.HasIndex("SeazonsId");

                    b.ToTable("LeagueSeazon");
                });

            modelBuilder.Entity("LaLiga.Models.Match", b =>
                {
                    b.HasOne("LaLiga.Models.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId");

                    b.HasOne("LaLiga.Models.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId");

                    b.HasOne("LaLiga.Models.Referee", "Referee")
                        .WithMany("Matches")
                        .HasForeignKey("RefereeId");

                    b.HasOne("LaLiga.Models.SeazonLeague", "SeazonLeague")
                        .WithMany()
                        .HasForeignKey("SeazonLeagueSeazonId", "SeazonLeagueLeagueId");

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");

                    b.Navigation("Referee");

                    b.Navigation("SeazonLeague");
                });

            modelBuilder.Entity("LaLiga.Models.Referee", b =>
                {
                    b.HasOne("LaLiga.Models.League", null)
                        .WithMany("Referees")
                        .HasForeignKey("LeagueId");

                    b.HasOne("LaLiga.Models.SeazonLeague", "SeazonLeague")
                        .WithMany()
                        .HasForeignKey("SeazonLeagueSeazonId", "SeazonLeagueLeagueId");

                    b.Navigation("SeazonLeague");
                });

            modelBuilder.Entity("LaLiga.Models.SeazonLeague", b =>
                {
                    b.HasOne("LaLiga.Models.League", "League")
                        .WithMany()
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaLiga.Models.Seazon", "Seazon")
                        .WithMany()
                        .HasForeignKey("SeazonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaLiga.Models.Team", null)
                        .WithMany("SeazonLeague")
                        .HasForeignKey("TeamId");

                    b.Navigation("League");

                    b.Navigation("Seazon");
                });

            modelBuilder.Entity("LaLiga.Models.Team", b =>
                {
                    b.HasOne("LaLiga.Models.League", null)
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId");
                });

            modelBuilder.Entity("LaLiga.Models.TeamMatch", b =>
                {
                    b.HasOne("LaLiga.Models.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaLiga.Models.Team", "Team")
                        .WithMany("Matches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("LeagueSeazon", b =>
                {
                    b.HasOne("LaLiga.Models.League", null)
                        .WithMany()
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaLiga.Models.Seazon", null)
                        .WithMany()
                        .HasForeignKey("SeazonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaLiga.Models.League", b =>
                {
                    b.Navigation("Referees");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("LaLiga.Models.Referee", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("LaLiga.Models.Team", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("SeazonLeague");
                });
#pragma warning restore 612, 618
        }
    }
}
